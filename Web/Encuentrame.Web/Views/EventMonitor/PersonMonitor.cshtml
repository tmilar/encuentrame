@using System.Configuration
@using Encuentrame.Model.Events
@using Encuentrame.Web
@using Encuentrame.Web.Helpers
@using Encuentrame.Support
@using Encuentrame.Web.Helpers.DataTable
@using Encuentrame.Web.Models.EventMonitors
@model Encuentrame.Web.Models.EventMonitors.EventPersonMonitorModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = Translations.EventPersonMonitorTitle;
}

@section scripts
{
   
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/form")
    <script src="@Html.ScriptUrl(@"~/scripts/markerclusterer.js")" type="text/javascript"></script>
    <script src="@Html.ScriptUrl(@"~/scripts/app/map-commons.js")" type="text/javascript"></script>
    <script src="@Html.ScriptUrl(@"~/scripts/app/controllers/eventMonitors/eventPersonMonitors.js")" type="text/javascript"></script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=@ConfigurationManager.AppSettings["GoogleMapsKey"]&callback=initMap">

    </script>

}

<h2 class="page-header">@ViewBag.Title</h2>
@Html.HiddenFor(m => m.EventId)
@Html.HiddenFor(m => m.UserId)
@Html.HiddenFor(m => m.EventLatitude)
@Html.HiddenFor(m => m.EventLongitude)


@using (Html.BeginEditSection(Translations.SectionBasicData))
{

    <div class="row">
        <div class="col-md-3">
            <div class="row">
                <div class="col-md-6">
                    @Html.DisplayFor(model => Model.Username)
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label">@Html.DisplayNameFor(x=>Model.Status)</label>
                        <p class="form-control-static ">
                            @if (Model.Status == IAmOkEnum.Ok)
                            {
                                <span class="label label-success">
                                    @TranslationsHelper.Get(IAmOkEnum.Ok)
                                </span>
                            }
                            else if (Model.Status == IAmOkEnum.WithoutAnswer)
                            {
                                <span class="label label-info">
                                    @TranslationsHelper.Get(IAmOkEnum.WithoutAnswer)
                                </span>
                            }
                            else
                            {
                                <span class="label label-danger">
                                    @TranslationsHelper.Get(IAmOkEnum.NotOk)
                                </span>
                            }
                        </p>
                    </div>
                </div>
            </div><div class="row">
                <div class="col-md-6">
                    <label class="control-label">@Html.DisplayNameFor(x=>Model.Seen)</label>
                   
                    <table class="table table-bordered">
                        <tbody>
                        <tr >
                            <td class="active text-center" colspan="3">
                                <strong>@Model.Seen</strong>
                            </td>
                        </tr>
                        <tr>
                            <td class="success text-center" title="@Html.DisplayNameFor(x=>Model.SeenOk)">@Model.SeenOk</td>
                            <td class="danger text-center" title="@Html.DisplayNameFor(x=>Model.SeenNotOk)">@Model.SeenNotOk</td>
                            <td class="info text-center" title="@Html.DisplayNameFor(x=>Model.SeenWithoutAnswer)">@Model.SeenWithoutAnswer</td>
                        </tr>

                        </tbody>
                    </table>
                   
                </div>
            </div><div class="row">
                <div class="col-md-12">
                    @Html.DisplayFor(model => Model.Image)
                </div>
            </div>
        </div>

  
        <div class="col-md-9">
            <div class="map-container" id="mapContainer"
                 data-positions-url="@Url.Action("UserPositions")"
                 data-images-folder="@Url.Content("~/images/maps/")"
                 data-icon-event="@Url.Content("~/images/maps/MapMarker_Flag.png")"
                 data-icon-point="@Url.Content("~/images/maps/MapMarker_Blue_Tiny_Point.png")"
                 data-icon-eye="@Url.Content("~/images/maps/MapMarker_Eye.png")"
                 data-label-event="@Model.EventName"
                 data-i-am-ok-enum='@(Html.ToJsonTranslatedString<IAmOkEnum>())'
                 style="position: relative; width: 100%; height: 700px; overflow: hidden"></div>
        </div>
    </div>





        @Html.ActionLink(Translations.GoBack, "Monitor", "EventMonitor", new { id=Model.EventId }, new { @class = "btn btn-link", role = "button" })
   
}
