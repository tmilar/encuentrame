@using Encuentrame.Web.Helpers
@using Encuentrame.Support
@model Encuentrame.Web.Helpers.DataTable.Filters.Interfaces.IEnumFilter
    
@{
    string isMultiple = string.Empty;

    if (Model.IsMultiple)
    {
        isMultiple = "multiple='multiple' data-is-multiple ='{0}'".FormatWith(Model.IsMultiple.ToString().ToLower());
    }

    var showGroups = string.Empty;

    if (Model.ShowGroups)
    {
        showGroups = "data-show-groups={0} ".FormatWith(Model.ShowGroups.ToString().ToLower());
    }

    var defaultValue = string.Empty;
    if (Model.CanAddDefaultValue)
    {
        defaultValue = "data-default-value={0}".FormatWith(Model.DefaultValue);
    }
}
<div class="col-md-@Model.Width table-filter-container enum-filter @Model.CssClass" data-for-child-table="@Model.ForChildTable.ToString().ToLower()" @showGroups @defaultValue>
  <div class="form-group">
      <label>@(!string.IsNullOrEmpty(Model.TranslationKey) ? TranslationsHelper.Get(Model.TranslationKey) : TranslationsHelper.Get(Model.Name))</label>
      <select class='select-enum-filter form-control reference reference-single' data-index="@Model.Index" data-name="@Model.ColumnName" @isMultiple>
          @if (!Model.IsMultiple)
          {
              <option value="-1"></option>
          }
          
          @foreach (var value in Enum.GetValues(Model.EnumType))
          {
              var name = Enum.GetName(Model.EnumType, value);
              var intValue = (int) Enum.Parse(Model.EnumType, name);
              var text = TranslationsHelper.Get(Model.EnumType.Name, name) ?? name;
             <option value="@intValue">@text</option>
          }
      </select>
  </div>    
</div>


